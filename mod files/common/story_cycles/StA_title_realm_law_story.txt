StA_title_realm_law = {
	on_setup = {
		set_variable = {
			name = title
			value = story_owner.var:StA_title
		}
		set_variable = {
			name = ruler
			value = story_owner
		}
		story_owner = { save_scope_as = ruler }
		story_owner = { remove_variable = StA_title }
		var:title = {
			if = {
				limit = { debug_only = yes }
				debug_log = "START STORY"
				scope:ruler = { debug_log_scopes = no }
				debug_log_scopes = no
			}
			save_scope_as = title
			set_variable = {
				name = StA_title_realm_law
				value = scope:story
			}
			# For inherited titles, inherit laws
			if = {
				limit = { has_variable = inherited_title }
				if = {
					limit = { debug_only = yes }
					debug_log = "STA INHERIT TITLE REALM LAW"
				}
				StA_inherit_title_laws = yes
				remove_variable = inherited_title
			}
			# For primary titles
			else_if = {
				limit = { THIS = scope:ruler.primary_title }
				# Transfer laws from previous primary_title
				if = {
					limit = {
						scope:ruler = { has_variable = StA_primary_title }
						NOT = { THIS = scope:ruler.var:StA_primary_title }
						scope:ruler.var:StA_primary_title = { has_variable = StA_title_realm_law }
						scope:ruler.var:StA_primary_title.var:StA_title_realm_law.var:ruler = scope:ruler
					}
					if = {
						limit = { debug_only = yes }
						debug_log = "STA TRANSFER REALM LAWS FROM EX PRIMARY TITLE"
						scope:ruler.var:StA_primary_title = { debug_log_scopes = no }
					}
					StA_transfer_title_laws = { TRANSFER_FROM = scope:ruler.var:StA_primary_title.var:StA_title_realm_law TRANSFER_TO = scope:story }
				}
				# Transfer laws from liege
				else_if = {
					limit = {
						scope:ruler = {
							is_independent_ruler = no
							liege = { has_government = feudal_government }
						}
						scope:ruler.liege.primary_title.var:StA_title_realm_law = { save_scope_as = transfer_from }
					}
					if = {
						limit = { debug_only = yes }
						debug_log = "STA TRANSFER REALM LAWS FROM LIEGE"
						scope:ruler.liege = { debug_log_scopes = no }
						scope:transfer_from.var:title = { debug_log_scopes = no }
					}
					StA_transfer_title_laws = { TRANSFER_FROM = scope:transfer_from TRANSFER_TO = scope:story }
				}
				else = {
					if = {
						limit = { debug_only = yes }
						debug_log = "STA SET DEFAULT REALM LAWS"
					}
					ordered_this_title_or_de_jure_above = {
						limit = {
							NOT = { THIS = PREV }
							holder = scope:ruler.liege
							has_variable = StA_title_realm_law
						}
						order_by = reverse_tier
						if = {
							limit = { debug_only = yes }
							debug_log = "STA LIEGE DE JURE TITLE"
							debug_log_scopes = no
						}
						var:StA_title_realm_law = { save_scope_as = transfer_from }
					}
					if = {
						limit = { NOT = { exists = scope:transfer_from }}
						if = {
							limit = { debug_only = yes }
							debug_log = "STA LIEGE PRIMARY TITLE"
							scope:ruler.liege.primary_title = { debug_log_scopes = no }
						}
						scope:ruler.liege.primary_title.var:StA_title_realm_law = { save_scope_as = transfer_from }
					}
					if = {
						limit = { debug_only = yes }
						debug_log = "STA TRANSFER REALM LAWS FROM LIEGE"
						scope:ruler.liege = { debug_log_scopes = no }
						scope:transfer_from.var:title = { debug_log_scopes = no }
					}
					StA_transfer_title_laws = { TRANSFER_FROM = scope:transfer_from TRANSFER_TO = scope:story }
				}
				else = {
					if = {
						limit = { debug_only = yes }
						debug_log = "STA SET DEFAULT REALM LAWS"
					}
					scope:story = { StA_set_default_realm_laws = yes }
				}
			}
			else = {
				ordered_this_title_or_de_jure_above = {
					limit = {
						NOT = { THIS = PREV }
						trigger_if = {
							limit = { has_variable = StA_holder }
							var:StA_holder = scope:ruler
						}
						trigger_else = {
							holder = scope:ruler
						}
						has_variable = StA_title_realm_law
					}
					order_by = reverse_tier
					save_scope_as = transfer_from
				}
				if = {
					limit = { NOT = { exists = scope:transfer_from }}
					scope:ruler.primary_title.var:StA_title_realm_law = { save_scope_as = transfer_from }
				}
				if = {
					limit = { debug_only = yes }
					debug_log = "STA TRANSFERT REALM LAWS FROM OWN TITLE"
					scope:transfer_from.var:title = { debug_log_scopes = no }
				}
				StA_transfer_title_laws = { TRANSFER_FROM = scope:transfer_from TRANSFER_TO = scope:story }
			}
		}
		var:title = { StA_reset_cooldown_title_holder_change = yes }
	}
	on_end = {
		if = {
			limit = { exists = var:title }
			var:title = {
				remove_variable = StA_title_realm_law
			}
		}
	}
	on_owner_death = {
	}
	effect_group = {
		months = 1

		trigger = {
			has_variable = StA_cooldown_law_change
		}

		triggered_effect = {
			trigger = {
				var:StA_cooldown_law_change > 1
			}
			effect = {
				change_variable = {
					name = StA_cooldown_law_change
					subtract = 1
				}
			}
		}
		triggered_effect = {
			trigger = {
				var:StA_cooldown_law_change <= 1
			}
			effect = {
				remove_variable = StA_cooldown_law_change
			}
		}
	}
	effect_group = {
		months = 1

		trigger = {
			has_variable = StA_cooldown_title_holder_change
		}

		triggered_effect = {
			trigger = {
				var:StA_cooldown_title_holder_change > 1
			}
			effect = {
				change_variable = {
					name = StA_cooldown_title_holder_change
					subtract = 1
				}
			}
		}
		triggered_effect = {
			trigger = {
				var:StA_cooldown_title_holder_change <= 1
			}
			effect = {
				remove_variable = StA_cooldown_title_holder_change
			}
		}
	}
}

StA_title_law = {
	on_setup = {
		debug_log = "StA_title_law"
	}
	on_end = {
	}
	on_owner_death = {
	}
}

StA_title_law = {
	on_setup = {
		debug_log = "StA_title_law"
	}
	on_end = {
	}
	on_owner_death = {
	}
}

StA_title_law = {
	on_setup = {
		debug_log = "StA_title_law"
	}
	on_end = {
	}
	on_owner_death = {
	}
}

StA_obligation_levels = {
	on_setup = {
	}
	on_end = {
	}
	on_owner_death = {
	}
}

StA_succession_laws = {
	on_setup = {
	}
	on_end = {
	}
	on_owner_death = {
	}
}