StA_title_realm_law = {
	on_setup = {
		set_variable = {
			name = StA_title
			value = story_owner.var:StA_title
		}
		set_variable = {
			name = StA_ruler
			value = story_owner
		}
		story_owner = { save_scope_as = StA_ruler }
		story_owner = { remove_variable = StA_title }

		var:StA_title = {
			set_variable = {
				name = StA_title_realm_law
				value = scope:story
			}
			# For primary titles, update ruler allegiance
			if = {
				limit = { THIS = scope:story.var:StA_ruler.primary_title }
				StA_remove_allegiance_from_non_primary_titles = yes
				# Ruler had allegiance
				if = {
					limit = { has_variable = StA_title_allegiance }
					# but ruler is now independent
					if = {
						limit = { scope:story.var:StA_ruler = { is_independent_ruler = yes }}
						# break previous allegiance
						StA_remove_current_title_allegiance = yes
					}
					# ruler is a vassal and his allegiance has changed
					else_if = {
						limit = { NOT = { var:StA_title_allegiance.holder = scope:story.var:StA_ruler.liege }}
						StA_remove_current_title_allegiance = yes
						StA_set_title_allegiance_to_liege = { LIEGE = scope:story.var:StA_ruler }
					}
				}
				# check vassals allegiance
				scope:story.var:StA_ruler = {
					every_vassal = {
						primary_title = {
							if = {
								# break outside allegiances
								limit = {
									has_variable = StA_title_allegiance
									NOT = { var:StA_title_allegiance.holder = scope:story.var:StA_ruler }
								}
								StA_remove_current_title_allegiance = yes
								StA_set_title_allegiance_to_liege = { LIEGE = scope:story.var:StA_ruler }
							}
							else_if = {
								limit = { NOT = { has_variable = StA_title_allegiance }}
								StA_remove_allegiance_from_non_primary_titles = yes
								StA_set_title_allegiance_to_liege = { LIEGE = scope:story.var:StA_ruler }
							}
						}
					}
				}
			}
			else = {
				scope:story.var:StA_ruler = {
					every_vassal = {
						limit = {
							primary_title = {
								has_variable = StA_title_allegiance
								scope:story.var:StA_title = {
									is_de_jure_liege_or_above_target = PREV
									NOT = { is_de_jure_liege_or_above_target = PREV.var:StA_title_allegiance }
								}
							}
						}
						primary_title = {
							StA_remove_current_title_allegiance = yes
							StA_set_title_allegiance_to_liege = { LIEGE = scope:story.var:StA_ruler }
						}
					}
				}
			}
		}

		if = {
			limit = { story_owner = { has_variable = StA_transfer_realm_laws }}
			set_variable = {
				name = feudal_government_taxes_
				value = var:StA_transfer_realm_laws.var:feudal_government_taxes_
			}
			set_variable = {
				name = feudal_government_levies_
				value = var:StA_transfer_realm_laws.var:feudal_government_levies_
			}
			set_variable = {
				name = succession_rights_
				value = var:StA_transfer_realm_laws.var:succession_rights_
			}
			set_variable = {
				name = title_revocation_rights_
				value = var:StA_transfer_realm_laws.var:title_revocation_rights_
			}
			set_variable = {
				name = war_declaration_rights_
				value = var:StA_transfer_realm_laws.var:war_declaration_rights_
			}
		}
		else_if = {
			limit = { var:StA_title = { has_variable = StA_title_allegiance }}
			set_variable = {
				name = feudal_government_taxes_
				value = var:StA_title.var:StA_title_allegiance.var:StA_title_realm_law.var:feudal_government_taxes_
			}
			set_variable = {
				name = feudal_government_levies_
				value = var:StA_title.var:StA_title_allegiance.var:StA_title_realm_law.var:feudal_government_levies_
			}
			set_variable = {
				name = succession_rights_
				value = var:StA_title.var:StA_title_allegiance.var:StA_title_realm_law.var:succession_rights_
			}
			set_variable = {
				name = title_revocation_rights_
				value = var:StA_title.var:StA_title_allegiance.var:StA_title_realm_law.var:title_revocation_rights_
			}
			set_variable = {
				name = war_declaration_rights_
				value = var:StA_title.var:StA_title_allegiance.var:StA_title_realm_law.var:war_declaration_rights_
			}
		}
		else = {
			set_variable = {
				name = feudal_government_taxes_
				value = 2
			}
			set_variable = {
				name = feudal_government_levies_
				value = 2
			}
			set_variable = {
				name = succession_rights_
				value = 0
			}
			set_variable = {
				name = title_revocation_rights_
				value = 1
			}
			set_variable = {
				name = war_declaration_rights_
				value = 1
			}
		}
		
		set_variable = {
			name = total_strength
			value = {
				every_in_list = {
					variable = StA_pledge_allegiance
					limit = {
						tier >= tier_county
						NOT = { holder = scope:title.holder }
						THIS = holder.primary_title
					}
					add = holder.max_military_strength
				}
				min = 1
			}
		}
		set_variable = {
			name = average_submission
			value = {
				every_in_list = {
					variable = StA_pledge_allegiance
					limit = {
						tier >= tier_county
						NOT = { holder = scope:title.holder }
						THIS = holder.primary_title
					}
					add = {
						add = holder.StA_submission
						multiply = holder.max_military_strength
					}
				}
				divide = var:total_strength
				max = 100
				min = -100
			}
		}
		set_variable = {
			name = StA_title_realm_authority
			value = var:StA_title.StA_title_realm_authority
		}
		set_variable = {
			name = StA_title_realm_authority_capacity
			value = var:StA_title.StA_title_realm_authority_capacity
		}
		set_variable = {
			name = StA_title_law_cooldown
			value = {
				add = 100
				subtract = var:StA_title.StA_title_realm_authority_capacity
				add = var:StA_title.StA_title_realm_authority
			}
		}
	}
	on_end = {
	}
	on_owner_death = {
	}
	effect_group = {
		months = 1

		trigger = {
			has_variable = StA_title_law_cooldown
		}

		triggered_effect = {
			trigger = {
				var:StA_title_law_cooldown > 1
			}
			effect = {
				change_variable = {
					name = StA_title_law_cooldown
					subtract = 1
				}
			}
		}
		triggered_effect = {
			trigger = {
				var:StA_title_law_cooldown <= 1
			}
			effect = {
				remove_variable = StA_title_law_cooldown
			}
		}
	}
}

StA_title_law = {
	on_setup = {
		debug_log = "StA_title_law"
	}
	on_end = {
	}
	on_owner_death = {
	}
}

StA_obligation_levels = {
	on_setup = {
	}
	on_end = {
	}
	on_owner_death = {
	}
}

StA_succession_laws = {
	on_setup = {
	}
	on_end = {
	}
	on_owner_death = {
	}
}