revive_magyar_paganism_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_major_religion.dds"

	desc = revive_magyar_paganism_decision_desc
	selection_tooltip = revive_magyar_paganism_decision_tooltip
	major = yes
	ai_check_interval = 0

	is_shown = {
		is_landed = yes
		#Must be some flavour of Magyar.
		culture = { has_cultural_pillar = heritage_magyar }
		NOR = {
			#Should be done early.
			culture = { has_cultural_era_or_later = culture_era_high_medieval }
			#Can only do it once.
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:flag_revived_magyar_paganism
			}
		}
		#Must be the ruler of the Carpathian Basin.
		any_sub_realm_county = {
			title_province = { geographical_region = custom_hungary }
		}
		#Must be feudalised.
		has_government = feudal_government
		#Must be something other than pagan.
		NOT = {
			faith.religion = { is_in_family = rf_pagan }
		}
		#Magyar Paganism must not have been reformed.
		religion:magyar_religion = {
			any_faith = {
				count = all
				has_doctrine = unreformed_faith_doctrine
			}
		}
	}
	
	is_valid = {
		#Must be suitably prestigious.
		prestige_level >= high_prestige_level
		#Either you hold k_hungary directly, or your vassal does.
		OR = {
			has_title = title:k_hungary
			AND = {
				has_title = title:e_carpathia
				any_vassal = { has_title = title:k_hungary }
			}
		}
		#Must control at least 80% of de jure Hungary (usually we'd use a region, but if Hungary has shrunk/grown for some reason, the people and title are more important than the actual area).
		any_realm_county = {
			count >= 30
			culture = { has_cultural_pillar = heritage_magyar }
		}
		#Must have at least CA4.
		trigger_if = {
			limit = { exists = global_var:StA_is_loaded }
			trigger_if = {
				limit = {
					has_title = title:k_hungary
					title:k_hungary = {
						has_variable = StA_title_realm_law
					}
				}
				custom_description = {
					text = "title_has_high_authority_capacity"
					subject = title:k_hungary
					title:k_hungary.StA_title_realm_authority_capacity >= high_authority_capacity
				}
			}
			trigger_else_if = {
				limit = {
					has_title = title:e_carpathia
					title:e_carpathia = {
						has_variable = StA_title_realm_law
					}
				}
				custom_description = {
					text = "title_has_high_authority_capacity"
					subject = title:e_carpathia
					title:e_carpathia.StA_title_realm_authority_capacity >= high_authority_capacity
				}
			}
			trigger_else = {}
		}
		trigger_else = {
			has_realm_law = crown_authority_3
		}

		#Must be a noted scholar of theology (and thus filled out the entire Theologian tree).
		has_trait = theologian
		#Should be done early: reiterate this here so the player isn't surprised by losing the decision when shifting up an era.
		NOT = {
			culture = { has_cultural_era_or_later = culture_era_high_medieval }
		}
	}

	is_valid_showing_failures_only = {
		is_capable_adult = yes
		is_imprisoned = no
		is_at_war = no
		is_independent_ruler = yes
	}

	cost = {
		piety = 2000
	}

	effect = {
		custom_tooltip = revive_magyar_paganism_decision.adjust_the_faith.tt
		show_as_tooltip = { revive_magyar_paganism_decision_scripted_effect = yes }
		trigger_event = { id = east_europe.0032 }
		hidden_effect = {
			add_to_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:flag_revived_magyar_paganism
			}
		}
	}
	
	ai_potential = {
		always = no
	}
}

unite_the_spanish_thrones_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_realm.dds"
	major = yes
	ai_check_interval = 60
	desc = unite_the_spanish_thrones_decision_desc

	is_shown = {
		culture = { has_cultural_pillar = heritage_iberian }
		game_start_date >= 1000.1.1
		OR = {
			calc_true_if = { #At least 2 of the titles has de jure land
				amount >= 2
				title:k_castille = { any_in_de_jure_hierarchy = { tier = tier_county } }
				title:k_leon = { any_in_de_jure_hierarchy = { tier = tier_county } }
				title:k_spanish_galicia = { any_in_de_jure_hierarchy = { tier = tier_county } }
			}
		}
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:unite_the_spanish_thrones_decision
			}
		}
		highest_held_title_tier < tier_empire
	}

	is_valid = {
		culture = { has_cultural_pillar = heritage_iberian }
		trigger_if = {
			limit = { title:k_castille = { any_in_de_jure_hierarchy = { tier = tier_county } } } #Has de jure land
			completely_controls = title:k_castille
			has_title = title:k_castille
			# [StA]
			trigger_if = {
				limit = { has_government = feudal_government }
				custom_description = {
					text = "title_has_medium_authority_capacity"
					subject = title:k_castille
					title:k_castille.StA_title_realm_authority_capacity >= medium_authority_capacity
				}
			}
			# [/StA]
		}
		trigger_if = {
			limit = { title:k_leon = { any_in_de_jure_hierarchy = { tier = tier_county } } } #Has de jure land
			completely_controls = title:k_leon
			has_title = title:k_leon
			# [StA]
			trigger_if = {
				limit = { has_government = feudal_government }
				custom_description = {
					text = "title_has_medium_authority_capacity"
					subject = title:k_leon
					title:k_leon.StA_title_realm_authority_capacity >= medium_authority_capacity
				}
			}
			# [/StA]
		}
		trigger_if = {
			limit = { title:k_spanish_galicia = { any_in_de_jure_hierarchy = { tier = tier_county } } } #Has de jure land
			completely_controls = title:k_spanish_galicia
			has_title = title:k_spanish_galicia
			# [StA]
			trigger_if = {
				limit = { has_government = feudal_government }
				custom_description = {
					text = "title_has_medium_authority_capacity"
					subject = title:k_spanish_galicia
					title:k_spanish_galicia.StA_title_realm_authority_capacity >= medium_authority_capacity
				}
			}
			# [/StA]
		}
		custom_description = {
   			text = unite_the_spanish_thrones_decision_primary
			OR = {
				has_primary_title = title:k_castille
				has_primary_title = title:k_leon
				has_primary_title = title:k_spanish_galicia
				has_primary_title = title:k_portugal
				has_primary_title = title:k_aragon
				has_primary_title = title:k_navarra
				has_primary_title = title:k_andalusia
				has_primary_title = title:k_badajoz
				has_primary_title = title:k_valencia
			}
		}
		#Must not be too early
		culture = { has_cultural_era_or_later = culture_era_high_medieval }
		# [StA]
		trigger_if = {
			limit = { NOT = { has_government = feudal_government }}
		# [/StA]
			OR = { 
				has_realm_law = crown_authority_2
				has_realm_law = crown_authority_3
			}
		}
	}

	effect = {
		save_scope_as = spain_uniter

		show_as_tooltip = { unite_the_spanish_thrones_decision_effects = yes } #Actually applied in iberia_north_africa.0005 - prestige, laws, title changes

		#Events
		trigger_event = iberia_north_africa.0005
		every_player = {
			limit = {
				NOT = { this = scope:spain_uniter }
				is_within_diplo_range = { CHARACTER = scope:spain_uniter }
			}
			trigger_event = iberia_north_africa.0006
		}

		#Can only be done once
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:unite_the_spanish_thrones_decision
		}
		set_global_variable = {
			name = unite_the_spanish_thrones_decision
			value = scope:spain_uniter
		}
		set_global_variable = {
			name = unite_the_spanish_thrones_decision_title
			value = scope:spain_uniter.primary_title
		}
	}

	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}

petition_liege_decision = {
	ai_check_interval = 0
	picture = "gfx/interface/illustrations/decisions/decision_knight_kneeling.dds"
	major = yes

	cost = {
		prestige = standard_activity_cost
	}

	cooldown = {
		days = standard_petition_liege_cooldown_time
	}

	is_shown = {
		is_landed = yes
		is_independent_ruler = no
		liege = { has_royal_court = yes }
	}

	is_valid_showing_failures_only = {
		is_available_adult = yes
		liege = { is_available_adult = yes }
		is_at_war_with_liege = no

		trigger_if = { # Council
			limit = { 
				AND = {
					scope:petition_liege_council_seat = yes 
					is_councillor = no 
				}
			}
			custom_tooltip = {
				text = petition_liege_council_seat_me_tt
				is_councillor = no 
			}
			custom_tooltip = {
				text = petition_liege_council_seat_liege_tt
				petition_liege_council_seat_trigger = yes
			}
		}
		trigger_if = { # Pay Debt
			limit = { scope:petition_liege_pay_debt = yes }
			custom_tooltip = {
				text = petition_liege_pay_debt_me_tt
				gold <= -100
			}
			custom_tooltip = {
				text = petition_liege_pay_debt_liege_tt
				liege.gold >= petitioner_debt_positivization_root_value
			}
		}
		trigger_if = { # War Aid
			limit = { scope:petition_liege_war_aid = yes }
			custom_tooltip = { # Must not be in any war involving liege
				text = petition_liege_war_aid_liege_tt
				petition_liege_war_aid_share_trigger = yes
			}
			custom_tooltip = { # Losing an external war
				text = petition_liege_war_aid_tt
				petition_liege_war_aid_trigger = yes
			}
			custom_tooltip = { # Liege not at war themselves
				text = petition_liege_internal_war_aid_tt
				petition_war_aid_liege_ally_value >= petition_war_aid_rebels_value
			}
			custom_tooltip = { # Liege not at war themselves
				text = petition_liege_external_war_aid_tt
				petition_liege_war_liege_involvement_trigger = yes
			}
		}
		trigger_if = { # Vassal War
			limit = { scope:petition_liege_vassal_war = yes }
			custom_tooltip = {
				text = petition_liege_vassal_war_tt
				petition_liege_vassal_war_trigger = yes
			}
		}
		trigger_if = { # Faction War
			limit = { scope:petition_liege_faction_war = yes }
			custom_tooltip = {
				text = petition_liege_faction_war_tt
				any_targeting_faction = { target_of_powerful_faction_trigger = yes }
			}
		}
		trigger_if = { # Bailiffs
			limit = { scope:petition_liege_county_control = yes }
			custom_tooltip = {
				text = petition_liege_county_control_tt
				any_held_title = { petition_liege_county_control_trigger = yes }
			}
		}
		trigger_if = { # Convert
			limit = { scope:petition_liege_county_convert = yes }
			faith = liege.faith
			custom_tooltip = {
				text = petition_liege_county_convert_tt
				any_held_title = { petition_liege_county_convert_trigger = yes }
			}
		}
		trigger_if = { # Opinion
			limit = { scope:petition_liege_county_opinion = yes }
			custom_tooltip = {
				text = petition_liege_county_opinion_tt
				any_held_title = { petition_liege_county_opinion_trigger = yes }
			}
		}
		trigger_if = { # Fortify
			limit = { scope:petition_liege_fortify_border = yes }
			custom_tooltip = {
				text = petition_liege_fortify_border_tt
				any_held_title = { petition_liege_fortify_border_trigger = yes }
			}
			custom_tooltip = {
				text = petition_liege_debt_tt
				NOT = { liege.gold < 0 }
			}
		}
		trigger_if = { # Liege Title
			limit = { scope:petition_liege_title_liege = yes }
			custom_tooltip = {
				text = petition_liege_title_liege_tt
				any_claim = { petition_liege_title_liege_trigger = yes }
			}
		}
		trigger_if = { # Vassal Title
			limit = { scope:petition_liege_title_vassal = yes }
			custom_tooltip = {
				text = petition_liege_title_vassal_liege_tt
				NOR = { # Only relevant if revocation is possible
					# liege = { has_realm_law = crown_authority_0 }
					liege = { has_realm_law = tribal_authority_1 }
					liege = { has_realm_law = tribal_authority_1 }
				}
			}
			custom_tooltip = {
				text = petition_liege_title_vassal_claim_tt
				any_claim = { petition_liege_title_vassal_trigger = yes }
			}
		}
		trigger_if = { # Construct City
			limit = { scope:petition_liege_construct_city = yes }
			custom_tooltip = {
				text = petition_liege_construct_city_tt
				any_held_title = { petition_liege_construct_city_trigger = yes }
			}
			custom_tooltip = {
				text = petition_liege_construct_city_liege_tt
				liege.gold > main_building_tier_1_cost
			}
		}
		trigger_if = { # Construct Temple
			limit = { scope:petition_liege_construct_temple = yes }
			custom_tooltip = {
				text = petition_liege_construct_temple_tt
				any_held_title = { petition_liege_construct_temple_trigger = yes }
			}
			custom_tooltip = {
				text = petition_liege_construct_city_liege_tt
				liege.gold > main_building_tier_1_cost
			}
		}
		trigger_if = { # Development
			limit = { scope:petition_liege_development = yes }
			custom_tooltip = {
				text = petition_liege_development_tt
				liege.capital_province.county.development_level >= petitioner_development_difference_decision_value
			}
		}
	}

	widget = {
		gui = "decision_view_widget_petition_liege"
		controller = decision_option_list_controller
		decision_has_second_step = yes
		decision_custom_widget_container = "custom_widgets_container_step_two"
		decision_to_second_step_button = "CHOOSE_PETITION_DECISION_NEXT_STEP_BUTTON"

		### General
		item = { # Council
			value = petition_liege_council_seat
			is_valid = {
				is_councillor = no 
				custom_tooltip = { # Liege can shuffle council
					text = petition_liege_council_seat_liege_tt
					petition_liege_council_seat_trigger = yes
				}
			}
			current_description = petition_liege_council_seat_desc
			localization = petition_liege_decision_option_council_seat
			icon = "gfx/interface/icons/message_feed/council.dds"
			ai_chance = { value = 0 } # Currently unused
		}
		item = { # Debt
			value = petition_liege_pay_debt
			is_valid = {
				custom_tooltip = { # In debt
					text = petition_liege_pay_debt_me_tt
					debt_level >= 1
				}
				custom_tooltip = { # Liege can afford your debt
					text = petition_liege_pay_debt_liege_tt
					liege.gold >= petitioner_debt_positivization_root_value
				}
			}
			current_description = petition_liege_pay_debt_desc
			localization = petition_liege_decision_option_pay_debt
			icon = "gfx/interface/icons/message_feed/steward_job.dds"
			ai_chance = { value = 0 } # Currently unused
		}
		### Titles
		item = { # Title Liege
			value = petition_liege_title_liege
			is_valid = {
				custom_tooltip = {
					text = petition_liege_title_liege_tt
					any_claim = { petition_liege_title_liege_trigger = yes }
				}
			}
			current_description = petition_liege_title_liege_desc
			localization = petition_liege_decision_option_title_liege
			icon = "gfx/interface/icons/message_feed/titles.dds"
			ai_chance = { value = 0 } # Currently unused
		}
		item = { # Title Vassal
			value = petition_liege_title_vassal
			is_valid = {
				custom_tooltip = {
					text = petition_liege_title_vassal_liege_tt
					NOR = { # Only relevant if revocation is possible
						# liege = { has_realm_law = crown_authority_0 }
						liege = { has_realm_law = tribal_authority_1 }
						liege = { has_realm_law = tribal_authority_1 }
					}
				}
				custom_tooltip = {
					text = petition_liege_title_vassal_claim_tt
					any_claim = { petition_liege_title_vassal_trigger = yes }
				}
			}
			current_description = petition_liege_title_vassal_desc
			localization = petition_liege_decision_option_title_vassal
			icon = "gfx/interface/icons/message_feed/generic_neutral_effect.dds"
			ai_chance = { value = 0 } # Currently unused
		}
		### Wars
		item = { # Faction War
			value = petition_liege_faction_war
			is_valid = {
				custom_tooltip = {
					text = petition_liege_faction_war_tt
					any_targeting_faction = { target_of_powerful_faction_trigger = yes }
				}
			}
			current_description = petition_liege_faction_war_desc
			localization = petition_liege_decision_option_faction_war
			icon = "gfx/interface/icons/message_feed/faction.dds"
			ai_chance = { value = 0 } # Currently unused
		}
		item = { # Vassal War
			value = petition_liege_vassal_war
			is_valid = {
				custom_tooltip ={
					text = petition_liege_vassal_war_tt
					petition_liege_vassal_war_trigger = yes
				}
			}
			current_description = petition_liege_vassal_war_desc
			localization = petition_liege_decision_option_vassal_war
			icon = "gfx/interface/icons/message_feed/generic_good_effect.dds"
			ai_chance = { value = 0 } # Currently unused
		}
		item = { # War Aid
			value = petition_liege_war_aid
			is_valid = {
				custom_tooltip = { # Must not be in any war involving liege
					text = petition_liege_war_aid_liege_tt
					petition_liege_war_aid_share_trigger = yes
				}
				custom_tooltip = { # Losing an external war
					text = petition_liege_war_aid_tt
					petition_liege_war_aid_trigger = yes
				}
				custom_tooltip = { # Liege not at war themselves
					text = petition_liege_internal_war_aid_tt
					petition_war_aid_liege_ally_value >= petition_war_aid_rebels_value
				}
				custom_tooltip = { # Liege not at war themselves
					text = petition_liege_external_war_aid_tt
					petition_liege_war_liege_involvement_trigger = yes
				}
			}
			current_description = petition_liege_war_aid_desc
			localization = petition_liege_decision_option_war_aid
			icon = "gfx/interface/icons/message_feed/war.dds"
			ai_chance = { value = 0 } # Currently unused
		}
		### Counties/Council
		item = { # Control
			value = petition_liege_county_control
			is_valid = {
				custom_tooltip = {
					text = petition_liege_county_control_tt
					any_held_title = { petition_liege_county_control_trigger = yes }
				}
			}
			current_description = petition_liege_county_control_desc
			localization = petition_liege_decision_option_county_control
			icon = "gfx/interface/icons/message_feed/control.dds"
			ai_chance = { value = 0 } # Currently unused
		}
		item = { # Convert
			value = petition_liege_county_convert
			is_valid = {
				custom_tooltip = {
					text = petition_liege_faith_tt
					faith = liege.faith
				}
				custom_tooltip = {
					text = petition_liege_county_convert_tt
					any_held_title = { petition_liege_county_convert_trigger = yes }
				}
			}
			current_description = petition_liege_county_convert_desc
			localization = petition_liege_decision_option_county_convert
			icon = "gfx/interface/icons/message_feed/bishop.dds"
			ai_chance = { value = 0 } # Currently unused
		}
		item = { # Opinion
			value = petition_liege_county_opinion
			is_valid = {
				custom_tooltip = {
					text = petition_liege_county_opinion_tt
					any_held_title = { petition_liege_county_opinion_trigger = yes }
				}
			}
			current_description = petition_liege_county_opinion_desc
			localization = petition_liege_decision_option_county_opinion
			icon = "gfx/interface/icons/message_feed/tier_up.dds"
			ai_chance = { value = 0 } # Currently unused
		}
		### Construction/Development
		item = { # Fortify
			value = petition_liege_fortify_border
			is_valid = {
				custom_tooltip = {
					text = petition_liege_fortify_border_tt
					any_held_title = { petition_liege_fortify_border_trigger = yes }
				}
			}
			current_description = petition_liege_fortify_border_desc
			localization = petition_liege_decision_option_fortify_border
			icon = "gfx/interface/icons/message_feed/marshal_job.dds"
			ai_chance = { value = 0 } # Currently unused
		}
		item = { # Construct City
			value = petition_liege_construct_city
			is_valid = {
				custom_tooltip = {
					text = petition_liege_construct_city_tt
					any_held_title = { petition_liege_construct_city_trigger = yes }
				}
				custom_tooltip = {
					text = petition_liege_holding_tt
					liege.gold > main_building_tier_1_cost
				}
			}
			current_description = petition_liege_construct_city_desc
			localization = petition_liege_decision_option_construct_city
			icon = "gfx/interface/icons/message_feed/building.dds"
			ai_chance = { value = 0 } # Currently unused
		}
		item = { # Construct Temple
			value = petition_liege_construct_temple
			is_valid = {
				custom_tooltip = {
					text = petition_liege_faith_tt
					faith = liege.faith
				}
				custom_tooltip = {
					text = petition_liege_construct_temple_tt
					any_held_title = { petition_liege_construct_temple_trigger = yes }
				}
				custom_tooltip = {
					text = petition_liege_holding_tt
					liege.gold > main_building_tier_1_cost
				}
			}
			current_description = petition_liege_construct_temple_desc
			localization = petition_liege_decision_option_construct_temple
			icon = "gfx/interface/icons/message_feed/religious.dds"
			ai_chance = { value = 0 } # Currently unused
		}
		item = { # Development
			value = petition_liege_development
			is_valid = {
				custom_tooltip = {
					text = petition_liege_development_tt
					liege.capital_province.county.development_level >= petitioner_development_difference_decision_value
				}
			}
			current_description = petition_liege_development_desc
			localization = petition_liege_decision_option_development
			icon = "gfx/interface/icons/message_feed/guest.dds"
			ai_chance = { value = 0 } # Currently unused
		}
	}

	effect = {
		set_variable = {
			name = petition_liege_scope
			value = liege
			months = 3
		}
		custom_tooltip = petition_liege_decision_effects
		if = {
			limit = {
				liege = { is_ai = yes }
			}
			custom_description_no_bullet = { text = petition_liege_warning_effect }
		}
		if = { # Council
			limit = { scope:petition_liege_council_seat = yes }
			set_variable = {
				name = petition_type
				value = flag:council_seat
			}
		}
		else_if = { # Debt
			limit = { scope:petition_liege_pay_debt = yes }
			set_variable = {
				name = petition_type
				value = flag:pay_debt
			}
		}
		else_if = { # War Aid
			limit = { scope:petition_liege_war_aid = yes }
			set_variable = {
				name = petition_type
				value = flag:war_aid
			}
		}
		else_if = { # Vassal War
			limit = { scope:petition_liege_vassal_war = yes }
			set_variable = {
				name = petition_type
				value = flag:vassal_war
			}
		}
		else_if = { # Faction War
			limit = { scope:petition_liege_faction_war = yes }
			set_variable = {
				name = petition_type
				value = flag:faction_war
			}
		}
		else_if = { # County
			limit = { scope:petition_liege_county_control = yes }
			set_variable = {
				name = petition_type
				value = flag:county_control
			}
		}
		else_if = { # Convert
			limit = { scope:petition_liege_county_convert = yes }
			set_variable = {
				name = petition_type
				value = flag:county_convert
			}
		}
		else_if = { # Opinion
			limit = { scope:petition_liege_county_opinion = yes }
			set_variable = {
				name = petition_type
				value = flag:county_opinion
			}
		}
		else_if = { # Fortify
			limit = { scope:petition_liege_fortify_border = yes }
			set_variable = {
				name = petition_type
				value = flag:fortify_border
			}
		}
		else_if = { # Title Liege
			limit = { scope:petition_liege_title_liege = yes }
			set_variable = {
				name = petition_type
				value = flag:title_liege
			}
		}
		else_if = { # Title Vassal
			limit = { scope:petition_liege_title_vassal = yes }
			set_variable = {
				name = petition_type
				value = flag:title_vassal
			}
		}
		else_if = { # Construct City
			limit = { scope:petition_liege_construct_city = yes }
			set_variable = {
				name = petition_type
				value = flag:construct_city
			}
		}
		else_if = { # Construct Temple
			limit = { scope:petition_liege_construct_temple = yes }
			set_variable = {
				name = petition_type
				value = flag:construct_temple
			}
		}
		else_if = { # Development
			limit = { scope:petition_liege_development = yes }
			set_variable = {
				name = petition_type
				value = flag:development
			}
		}
		stress_impact = {
			shy = medium_stress_impact_gain
			arrogant = medium_stress_impact_gain
		}
		hidden_effect = {
			# Spawn the Petition Liege activity
			liege.capital_province = {
				spawn_activity = {
					type = activity_petition_liege
					owner = root
				}
			}
		}
	}
	
	ai_potential = {
		always = no # Only players can do this. AI vassals go through the normal court events/hold court activity.
	}
}

form_austria_kingdom_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_dynasty_house.dds"

	desc = form_austria_kingdom_decision_desc
	selection_tooltip = form_austria_kingdom_decision_tooltip
	major = yes
	ai_goal = yes

	is_shown = {
		is_landed = yes
		NOT = { exists = title:k_austria.holder }
		NOT = {  #Can only do it once.
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:flag_formed_austria_kingdom
			}
		}
		#No kings or emperors...
		highest_held_title_tier <= tier_duchy
		is_independent_ruler = no
		#Must be within the HRE, else the bid & flavour make no sense.
		top_liege = { has_title = title:e_hre }
		#Must hold land within the relevant areas directly.
		any_held_title = {
			tier = tier_county
			OR = {
				title_province = { geographical_region = custom_core_austria }
				title_province = { geographical_region = custom_stretch_austria }
			}
		}
	}

	is_valid = {
		#Must enjoy imperial immediacy.
		liege = title:e_hre.holder
		#Must be suitably prestigious.
		prestige_level >= high_prestige_level
		#Must control core Austria
		completely_controls_region = custom_core_austria
		#Must not be of the ruling dynasty
		custom_description = {
			text = "form_austria_hre_dynasty_trigger"
			NOT = { dynasty = title:e_hre.holder.dynasty }
		}
		#Must have a hook on the emperor
		has_strong_usable_hook = title:e_hre.holder
		#Must not be too early
		# [StA]
		trigger_if = {
			limit = {
				exists = global_var:StA_is_loaded
				has_government = feudal_government
			}
			custom_description = {
				text = "held_duchy_has_law_authority_capacity"
				subject = THIS
				any_held_title = {
					trigger_if = {
						limit = {
							tier = tier_duchy
							empire = title:e_hre
							has_variable = StA_title_realm_law
						}
						StA_title_realm_authority_capacity >= medium_authority_capacity
					}
					count = all
				}
			}
		}
		trigger_else = {
			OR = { 
				has_realm_law = crown_authority_2
				has_realm_law = crown_authority_3
			}
		}
		# [/StA]
	}

	is_valid_showing_failures_only = {
		is_capable_adult = yes
		is_imprisoned = no
		is_at_war = no
		faith = top_liege.faith	#Must share the faith of your emperor.
	}

	cost = {
		gold = 1000
	}

	effect = {
		show_as_tooltip = {
			form_austria_scripted_effect = yes
		}
		trigger_event = {
			id = middle_europe_decisions.0003
		}
		hidden_effect = {
			add_to_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:flag_formed_austria_kingdom
			}
			set_global_variable = {
				name = flag_formed_austria_kingdom
				value = root
			}
		}
	}
	
	ai_potential = {
		prestige_level >= high_prestige_level
	}

	ai_will_do = {
		base = 0

		#Only worth considering if you actually have your capital in Austria.		
		modifier = {
			add = 20
			capital_county.title_province = { geographical_region = custom_core_austria }
		}

		#More brazen characters are more likely to have a bash.
		ai_value_modifier = {
			ai_boldness = 0.75
			ai_greed = 0.25
		}
	}
}

empower_sicilian_parliament_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_realm.dds"

	desc = empower_sicilian_parliament_decision_desc
	selection_tooltip = empower_sicilian_parliament_decision_tooltip
	major = yes
	ai_goal = yes

	is_shown = {
		culture = { has_cultural_pillar = heritage_latin }
		is_ruler = yes
		is_landed = yes
		NOT = {  #Can only do it once.
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:flag_empowered_sicilian_parliament
			}
		}
		highest_held_title_tier >= 4 #Kings and Emperors only.
		is_independent_ruler = yes
		capital_province = { geographical_region = custom_sicily }
		NOT = { has_government = tribal_government }
	}
	
	is_valid = {
		prestige_level >= 3
		learning >= 10
		# [StA]
		OR = {
			has_title = title:k_sicily
			has_title = title:k_naples
			has_title = title:k_trinacria
		}
		trigger_if = {
			limit = { has_government = feudal_government }
			trigger_if = {
				limit = { has_title = title:k_sicily }
				custom_description = {
					text = "title_has_medium_authority_capacity"
					subject = title:k_sicily
					title:k_sicily.StA_title_realm_authority_capacity >= medium_authority_capacity
				}
			}
			trigger_if = {
				limit = { has_title = title:k_naples }
				custom_description = {
					text = "title_has_medium_authority_capacity"
					subject = title:k_naples
					title:k_naples.StA_title_realm_authority_capacity >= medium_authority_capacity
				}
			}
			trigger_if = {
				limit = { has_title = title:k_trinacria }
				custom_description = {
					text = "title_has_medium_authority_capacity"
					subject = title:k_trinacria
					title:k_trinacria.StA_title_realm_authority_capacity >= medium_authority_capacity
				}
			}
		}
		trigger_else = {
			NOT = { has_realm_law = crown_authority_0 }
		}
		# [/StA]
		OR = {
			completely_controls = title:d_sicily # The Island
			completely_controls = title:d_capua # The Boot
		}
	}

	is_valid_showing_failures_only = {
		is_capable_adult = yes
		is_imprisoned = no
		is_independent_ruler = yes
		is_at_war = no
	}

	cost = {
		gold = 1500
		prestige = 3000
	}

	effect = {
		show_as_tooltip = {
			if = { #Only for tooltip, player gets to choose in the event when owning both.
				limit = { completely_controls = title:d_sicily }
				title:c_palermo = {
					sicilian_parliament_building_scripted_effect = yes
				}
			}
			else_if = {
				limit = { completely_controls = title:d_capua }
				
				title:c_napoli = {
					sicilian_parliament_building_scripted_effect = yes
				}
			}
			empower_sicilian_parliament_decision_scripted_effect = yes
		}
		trigger_event = {
			id = middle_europe_decisions.0010
		}
		hidden_effect = {
			add_to_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:flag_empowered_sicilian_parliament
			}
		}
	}
	
	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 15
		ai_value_modifier = {
			ai_boldness = 1.0
		}
	}
}

promote_gothic_innovations_decision = { #12th century Renaissance
	picture = "gfx/interface/illustrations/decisions/decision_misc.dds"

	desc = promote_gothic_innovations_decision_desc
	selection_tooltip = promote_gothic_innovations_decision_tooltip
	major = yes
	ai_goal = yes

	is_shown = {
		OR = {
			culture = { has_cultural_pillar = heritage_latin }
			culture = { has_cultural_pillar = heritage_frankish }
		}
		NOT = { has_culture = culture:italian }
		is_ruler = yes
		is_landed = yes
		root.culture = {
			has_cultural_era_or_later = culture_era_early_medieval
		}
		NOT = {  #Can only do it once.
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:flag_promoted_gothic_innovations
			}
		}
		highest_held_title_tier >= 4 #Kings and Emperors only.
		OR = {
			has_title = title:k_france
			has_title = title:e_france
			has_title = title:k_burgundy
		}
		NOR = {
			has_government = theocracy_government
			has_government = clan_government
			has_government = tribal_government
		}
	}
	
	is_valid = {
		prestige_level >= 4
		learning >= 10
		trigger_if = {
			limit = { has_government = feudal_government }
			trigger_if = {
				limit = { has_title = title:e_france }
				custom_description = {
					text = "title_has_medium_authority_capacity"
					subject = title:e_france
					title:e_france.StA_title_realm_authority_capacity >= medium_authority_capacity
				}
			}
			trigger_else = {
				trigger_if = {
				limit = { has_title = title:k_france }
					custom_description = {
						text = "title_has_medium_authority_capacity"
						subject = title:k_france
						title:k_france.StA_title_realm_authority_capacity >= medium_authority_capacity
					}
				}
				trigger_if = {
				limit = { has_title = title:k_burgundy }
					custom_description = {
						text = "title_has_medium_authority_capacity"
						subject = title:k_burgundy
						title:k_burgundy.StA_title_realm_authority_capacity >= medium_authority_capacity
					}
				}
			}
		}
		trigger_else = {
			NOT = { has_realm_law = crown_authority_0 }
		}
		#Must control core provinces either in the North or the South:
		OR = {
			AND = {
				completely_controls = title:d_valois
				completely_controls = title:d_orleans
			}
			AND = {
				completely_controls = title:d_provence
				completely_controls = title:d_toulouse
			}
		}
		#Must have basic innovations:
		root.culture = {
			has_innovation = innovation_royal_prerogative
			has_innovation = innovation_knighthood
			has_innovation = innovation_windmills
		}
	}

	is_valid_showing_failures_only = {
		is_capable_adult = yes
		is_imprisoned = no
		is_at_war = no
	}

	cost = {
		gold = 500
		prestige = 3000
	}

	effect = {
		show_as_tooltip = {
			promote_gothic_innovations_decision_scripted_effect = yes
		}
		trigger_event = {
			id = middle_europe_decisions.0012
		}
		hidden_effect = {
			add_to_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:flag_promoted_gothic_innovations
			}
		}
	}
	
	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 15
		ai_value_modifier = {
			ai_boldness = 1.0
		}
	}
}