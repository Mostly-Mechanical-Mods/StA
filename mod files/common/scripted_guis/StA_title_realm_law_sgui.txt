StA_change_title_law = {
	scope = character
	saved_scopes = {
		title
		obligation
		level
	}
	effect = {
		clear_variable_list = vassal_opt_in
		clear_variable_list = vassal_opt_out
		set_variable = {
			name = StA_change_law_title
			value = scope:title
		}
		set_variable = {
			name = StA_change_law_obligation
			value = scope:obligation
		}
		set_variable = {
			name = StA_change_law_level
			value = scope:level
		}
		set_variable = {
			name = StA_change_law_cost
			value = {
				if = {
					limit = { scope:obligation = flag:feudal_government_taxes_ }
					add = scope:level
					subtract = scope:title.var:StA_title_realm_law.var:feudal_government_taxes_
					multiply = 5
				}
				else_if = {
					limit = { scope:obligation = flag:feudal_government_levies_ }
					add = scope:level
					subtract = scope:title.var:StA_title_realm_law.var:feudal_government_levies_
					multiply = 5
				}
				else_if = {
					limit = { scope:obligation = flag:succession_rights_ }
					add = scope:level
					subtract = scope:title.var:StA_title_realm_law.var:succession_rights_
					multiply = 20
				}
				else_if = {
					limit = { scope:obligation = flag:war_declaration_rights_ }
					add = scope:level
					subtract = scope:title.var:StA_title_realm_law.var:war_declaration_rights_
					multiply = -20
				}
				else_if = {
					limit = { scope:obligation = flag:title_revocation_rights_ }
					add = scope:level
					subtract = scope:title.var:StA_title_realm_law.var:title_revocation_rights_
					multiply = -20
				}
			}
		}
		set_variable = {
			name = StA_change_law_cost_check
			value = {
				scope:title = {
					add = StA_title_realm_authority_capacity
					subtract = StA_title_realm_authority
				}
				subtract = var:StA_change_law_cost
			}
		}
		set_variable = StA_confirm_title_window_on
		scope:title = {
			ordered_in_list = {
				variable = StA_pledge_allegiance
				limit = {
					holder = { has_government = feudal_government }
					tier >= tier_county
				}
				order_by = tier
				max = 99
				check_range_bounds = no
				if = {
					limit = { holder = { has_contract_obligation_opt_out = yes }}
					ROOT = {
						add_to_variable_list = {
							name = vassal_opt_out
							target = PREV
						}
					}
				}
				else = {
					ROOT = {
						add_to_variable_list = {
							name = vassal_opt_in
							target = PREV
						}
					}
				}
			}
		}
	}
}

StA_cancel_title_law_change = {
	scope = character
	saved_scopes = {
		title
		obligation
		level
	}
	effect = {
		remove_variable = StA_confirm_title_window_on
		remove_variable = StA_change_law_title
		remove_variable = StA_change_law_obligation
		remove_variable = StA_change_law_level
		remove_variable = StA_change_law_cost
	}
}

StA_law_change_cost_alert = {
	scope = character
	is_valid = {
		trigger_if = {
			limit = { var:StA_change_law_cost > 0 }
			var:StA_change_law_cost_check > 0
		}
	}
}

StA_law_change_cooldown_alert = {
	scope = character
	is_valid = {
		trigger_if = {
			limit = { var:StA_change_law_cost > 0 }
			var:StA_change_law_title.StA_cooldown = 0
		}
	}
}

StA_confirm_title_law = {
	scope = character
	is_valid = {
		trigger_if = {
			limit = { var:StA_change_law_cost > 0 }
			var:StA_change_law_cost_check > 0
			var:StA_change_law_title.StA_cooldown = 0
		}
	}
	effect = {
		var:StA_change_law_title = {
			StA_update_cooldown_law_change = yes
			title_realm_law_change = {
				LAW = ROOT.var:StA_change_law_obligation
				LEVEL = ROOT.var:StA_change_law_level
			}
		}
		remove_variable = StA_confirm_title_window_on
		remove_variable = StA_change_law_title
		remove_variable = StA_change_law_obligation
		remove_variable = StA_change_law_level
		remove_variable = StA_change_law_cost
	}
}

StA_submission_tooltip = {
	scope = character
	saved_scopes = {
		character
	}
	effect = {
		set_variable = {
			name = StA_submission_tooltip
			value = scope:character
		}
	}
}

StA_title_window_player = {
	scope = character
	saved_scopes = {
		title
	}

	is_valid = {
		exists = scope:title
		exists = scope:title.holder
		scope:title = { has_variable = StA_title_realm_law }
	}

	effect = {
		scope:title.holder = {
			clear_variable_list = title_window_player
			if = {
				limit = { scope:title.holder = ROOT }
				ordered_held_title = {
					order_by = tier
					max = 99
					check_range_bounds = no
					limit = { has_variable = StA_title_realm_law }
					save_scope_as = title_temp
					ROOT = {
						add_to_variable_list = {
							name = title_window_player
							target = PREV
						}
					}
					every_in_de_jure_hierarchy = {
						limit = {
							NOT = { THIS = PREV }
							holder = ROOT
							tier >= tier_duchy
							any_this_title_or_de_jure_above = {
								NOR = {
									THIS = PREV
									THIS = scope:title_temp
								}
								has_variable = StA_title_realm_law
								target_is_de_jure_liege_or_above = scope:title_temp
								count = 0
							}
						}
						ROOT = {
							add_to_variable_list = {
								name = title_window_player
								target = PREV
							}
						}
					}
					ordered_in_list = {
						variable = StA_pledge_allegiance
						limit = {
							holder = scope:title.holder
							trigger_if = {
								limit = { NOT = { has_variable = StA_title_realm_law }}
								tier > tier_county
							}
						}
						order_by = tier
						max = 99
						check_range_bounds = no
						ROOT = {
							add_to_variable_list = {
								name = title_window_player
								target = PREV
							}
						}
					}
				}
			}
			scope:title = {
				if = {
					limit = { has_variable = StA_title_realm_law }
					var:StA_title_realm_law = {
						StA_reset_authority = yes
					}
				}
			}
		}
	}
}

StA_title_window_allegiance = {
	scope = title

	is_valid = {
		has_variable = StA_title_realm_law
		exists = holder
	}

	effect = {
		clear_variable_list = StA_title_window_allegiance
		ordered_in_list = {
			variable = StA_pledge_allegiance
			order_by = tier
			max = 99
			check_range_bounds = no
			PREV = {
				add_to_variable_list = {
					name = StA_title_window_allegiance
					target = PREV
				}
			}
		}
		var:StA_title_realm_law = { StA_reset_authority = yes }
	}
}

StA_title_window_create_title = {
	scope = title
	saved_scopes = {
		creator
	}
	effect = {
		debug_log = "SGUI CREATE TITLE"
		debug_log_scopes = no
	# 	if = {
	# 		limit = {
	# 			any_this_title_or_de_jure_above = {
	# 				NOT = { THIS = PREV }
	# 				has_variable = StA_title_realm_law
	# 			}
	# 		}
	# 		ordered_this_title_or_de_jure_above = {
	# 			limit = {
	# 				NOT = { THIS = PREV }
	# 				has_variable = StA_title_realm_law
	# 			}
	# 			order_by = tier
	# 			max = 4
	# 			check_range_bounds = no
	# 			var:StA_title_realm_law = {
	# 				add_to_variable_list = {
	# 					name = StA_pledge_allegiance
	# 					target = ROOT
	# 				}
	# 			}
	# 			ROOT = {
	# 				set_variable = {
	# 					name = StA_title_allegiance
	# 					value = PREV
	# 				}
	# 			}
	# 		}
	# 	}
	# 	else = {
	# 		scope:creator = {
	# 			set_variable = {
	# 				name = StA_title
	# 				value = PREV
	# 			}
	# 			create_story = StA_title_realm_law
	# 		}
	# 	}
	}
}

StA_inherits_succession_law = {
	scope = title
	is_shown = {
		OR = {
			has_title_law = StA_single_heir_succession_law
			has_title_law = StA_single_heir_succession_law_youngest
			has_title_law = StA_single_heir_dynasty_house
		}
	}
}

StA_vassal_in_faction = {
	scope = character
	is_shown = {
		liege = {
			any_targeting_faction = {
				has_variable = StA_title_allegiance
				var:StA_title_allegiance = ROOT.primary_title.var:StA_title_allegiance
				any_faction_member = {
					THIS = ROOT
				}
			}
		}
	}
}

faction_window_cant_join_faction = {
	scope = character
	is_shown = {
		OR = {
			is_adult = no
			liege = { has_strong_hook = PREV }
			is_allied_to = liege
			has_relation_friend = liege
			has_relation_lover = liege
			has_relation_soulmate = liege
			has_secret_relation_lover = liege
			is_imprisoned = yes
			has_trait = incapable
			has_character_flag = joining_faction_block
		}
	}
	effect = {
		clear_variable_list = faction_window_cant_join_creater_members
		ordered_vassal = {
			limit = {
				OR = {
					is_adult = no
					PREV = { has_strong_hook = PREV }
					is_allied_to = PREV
					has_relation_friend = PREV
					has_relation_lover = PREV
					has_relation_soulmate = PREV
					has_secret_relation_lover = PREV
					trigger_if = {
						limit = {
							exists = joined_faction
							joined_faction = {
								faction_is_at_war = no
							}
						}
						is_imprisoned = yes
					}
					has_trait = incapable
					has_character_flag = joining_faction_block
				}
			}
			max = 1000
			check_range_bounds = no
			order_by = highest_held_title_tier
			PREV = {
				add_to_variable_list = {
					name = LTAF_faction_window_cant_join_creater_members
					target = PREV
				}
			}
		}
	}
}