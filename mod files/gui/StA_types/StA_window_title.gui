template UniUI_StA_title_window_states {
	# state = {
	# 	name = _show
	# 	on_start = "[GetVariableSystem.Set('StA_title_window_tracker',TitleViewWindow.GetTitle.GetKey)]"
	# 	on_start = "[GetScriptedGui('StA_title_window_player').Execute( GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('title',TitleViewWindow.GetTitle.MakeScope).End)]"
	# 	on_start = "[GetScriptedGui('StA_title_window_allegiance').Execute( GuiScope.SetRoot(TitleViewWindow.GetTitle.MakeScope).End)]"
	# }
	state = {
		name = "StA_title_window"
		trigger_when = "[Not(GetVariableSystem.HasValue('StA_title_window_tracker',TitleViewWindow.GetTitle.GetKey))]"
		on_start = "[GetVariableSystem.Set('StA_title_window_tracker',TitleViewWindow.GetTitle.GetKey)]"
		on_start = "[GetScriptedGui('StA_title_window_player').Execute( GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('title',TitleViewWindow.GetTitle.MakeScope).End)]"
		on_start = "[GetScriptedGui('StA_title_window_allegiance').Execute( GuiScope.SetRoot(TitleViewWindow.GetTitle.MakeScope).End)]"
	}

	state = {
		name = "StA_title_window_fallback"
		trigger_when = "[Not(And(TitleViewWindow.GetTitle.MakeScope.Var('StA_title_realm_law').IsSet,GreaterThanOrEqualTo_int32(TitleViewWindow.GetTitle.GetTierFrame,'(int32)4')))]"
		on_start = "[GetVariableSystem.Set('title_view_tab','de_jure_tab')]"
	}
	state = {
		name = _hide
		on_start = "[GetVariableSystem.Clear( 'title_view_tab' )]"
	}
}

template UniUI_StA_title_window_create_title {
	onclick = "[GetVariableSystem.Set('StA_create_title',TitleViewWindow.GetTitle.GetKey)]"
}

types UniUI_StA_title_window {
	type UniUI_StA_title_window_tabs = hbox {
		visible = "[TitleViewWindow.GetTitle.GetHolder.GetGovernment.IsType('feudal_government')]"
		name = "tabs"
		layoutpolicy_horizontal = expanding

		button_tab = {
			layoutpolicy_horizontal = expanding
			name = "show_vassals"
			text = "TITLE_VIEW_DE_JURE"
			default_format = "#weak"
			down = "[GetVariableSystem.HasValue( 'title_view_tab', 'de_jure_tab' ) )]"
			onclick = "[GetVariableSystem.Set( 'title_view_tab', 'de_jure_tab' )]"
		}

		button_tab = {
			visible = "[TitleViewWindow.GetTitle.GetHolder.GetGovernment.IsType('feudal_government')]"
			layoutpolicy_horizontal = expanding
			name = "show_allegiance"
			text = "TITLE_VIEW_VASSALS"
			default_format = "#weak"
			down = "[GetVariableSystem.HasValue( 'title_view_tab', 'vassals_tab' ) )]"
			onclick = "[GetVariableSystem.Set( 'title_view_tab', 'vassals_tab' )]"
			enabled = "[TitleViewWindow.GetTitle.MakeScope.Var('StA_title_realm_law').IsSet]"
		}

		button_tab = {
			visible = "[And(TitleViewWindow.GetTitle.GetHolder.GetGovernment.IsType('feudal_government'),TitleViewWindow.GetTitle.GetHolder.IsLocalPlayer)]"
			layoutpolicy_horizontal = expanding
			name = "realm_laws"
			text = "TITLE_REALM_LAWS"
			default_format = "#weak"
			down = "[GetVariableSystem.HasValue( 'title_view_tab', 'StA_realm_law_tab' ) )]"
			onclick = "[GetVariableSystem.Set( 'title_view_tab', 'StA_realm_law_tab' )]"
			enabled = "[TitleViewWindow.GetTitle.MakeScope.Var('StA_title_realm_law').IsSet]"
		}
	}

	type UniUI_StA_title_window_vassals_tab = vbox {
		name = "vassals_tab_contents"
		visible = "[And(GetVariableSystem.HasValue( 'title_view_tab', 'vassals_tab' ),TitleViewWindow.GetTitle.GetHolder.GetGovernment.IsType('feudal_government'))]"
		layoutpolicy_horizontal = expanding
		layoutpolicy_vertical = expanding
		margin_top = 10
		spacing = 15

		text_label_center = {
			visible = "[Not(Title.MakeScope.Var('StA_title_realm_law').IsSet)]"
			text = "TITLE_SWEARS_ALLEGIANCE_TO"
		}
		
		text_label_center = {
			visible = "[Title.MakeScope.Var('StA_title_realm_law').IsSet]"
			text = "TITLE_ALLEGIANCE_VASSAL_LIST"
		}

		hbox = {
			spacing = 5
			icon = {
				size = { 25 25 }
				texture = "gfx/interface/icons/icon_soldier.dds"
			}

			text_single = {
				min_width = 50
				text = "STA_TITLE_MIL_STRENGTH"
			}

			spacer = { size = { 50 0 }}

			icon = {
				visible = "[GreaterThanOrEqualTo_CFixedPoint(Title.MakeScope.Var('StA_title_realm_law').Var('average_submission').GetValue,'(CFixedPoint)0')]"
				name = "submission_icon_up"
				size = { 30 30 }
				texture = "gfx/interface/icons/message_feed/tier_up.dds"
			}

			icon = {
				visible = "[LessThan_CFixedPoint(Title.MakeScope.Var('StA_title_realm_law').Var('average_submission').GetValue,'(CFixedPoint)0')]"
				name = "submission_icon_down"
				size = { 30 30 }
				texture = "gfx/interface/icons/message_feed/tier_down.dds"
			}

			text_single = {
				min_width = 50
				text = "STA_TITLE_SUBMISSION"
			}
		}

		scrollbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
			minimumsize = { 500 300 }

			blockoverride "scrollbox_content" {
				vbox = {
					datamodel = "[TitleViewWindow.GetTitle.MakeScope.GetList('StA_title_window_allegiance')]"
					layoutpolicy_horizontal = expanding
					spacing = 3

					item = {
						button_standard_list = {
							datacontext = "[Scope.Title.GetHolder]"
							layoutpolicy_horizontal = expanding
							minimumsize = { 0 50 }
							onclick = "[DefaultOnCharacterClick(Character.GetID)]"
							onrightclick = "[DefaultOnCharacterRightClick(Character.GetID)]"
							button_ignore = none

							hbox = {
								layoutpolicy_horizontal = expanding
								margin = { 5 0 }
								position = {0 -2 }

								coa_realm_tiny_crown = {}

								text_single = {
									text = "[Character.GetNameNoTooltip]"
									layoutpolicy_horizontal = expanding
									margin = { 10 0 }
								}
								expand = {}

								hbox = {
									
									# visible = "[Not(Character.GetPrimaryTitle.IsBarony)]"
									margin = { 5 0 }

									text_single = {
										visible = "[Character.MakeScope.Var('desire').IsSet]"
										text = "[Character.MakeScope.Var('desire_value').GetValue]"
									}

									text_single = {
										visible = "[Character.MakeScope.Var('desire').IsSet]"
										text = "[Localize(Concatenate(Character.MakeScope.Var('desire').GetFlagName,'icon_only'))]"
										tooltip = "[Localize(Concatenate(Character.MakeScope.Var('desire').GetFlagName,'desc'))]"
									}

									# icon = {
									# 	size = { 25 25 }
									# 	texture = "gfx/interface/icons/icon_soldier.dds"
									# 	alpha = "[Min_CFixedPoint(Multiply_CFixedPoint(Character.MakeScope.ScriptValue('StA_relative_mil_strength'),'(CFixedPoint)2'),'(CFixedPoint)1')]"
									# }
									
									button = {
										tooltip = "[Character.MakeScope.GetScriptValueDesc('StA_submission')]"
										min_width = 30
										visible = "[GreaterThanOrEqualTo_CFixedPoint(Character.MakeScope.ScriptValue('StA_submission'),'(CFixedPoint)0')]"
										name = "submission_icon_up"
										size = { 30 30 }
										texture = "gfx/interface/icons/message_feed/tier_up.dds"
										alpha = "[Multiply_CFixedPoint(Character.MakeScope.ScriptValue('StA_submission'),'(CFixedPoint)0.01')]"
									}
									button = {
										tooltip = "[Character.MakeScope.GetScriptValueDesc('StA_submission')]"
										min_width = 30
										visible = "[LessThan_CFixedPoint(Character.MakeScope.ScriptValue('StA_submission'),'(CFixedPoint)0')]"
										name = "submission_icon_down"
										size = { 30 30 }
										texture = "gfx/interface/icons/message_feed/tier_down.dds"
										alpha = "[Abs_CFixedPoint(Multiply_CFixedPoint(Character.MakeScope.ScriptValue('StA_submission'),'(CFixedPoint)0.01'))]"
									}
								}
							}
						}
					}
				}
			}
		}
	}

	type UniUI_StA_title_window_realm_law_tab = vbox {
		visible = "[And(GetVariableSystem.HasValue( 'title_view_tab', 'StA_realm_law_tab' ),And( Title.MakeScope.Var('StA_title_realm_law').IsSet,TitleViewWindow.GetTitle.GetHolder.IsLocalPlayer))]"
		layoutpolicy_vertical = expanding
		layoutpolicy_horizontal = expanding
		margin_top = 10
		spacing = 10

		text_label_center = {
			text = "TITLE_REALM_LAWS_DESC"
		}

		vbox = {
			layoutpolicy_horizontal = fixed
			# text_label_center = {
			# 	tooltip = "[Title.MakeScope.GetScriptValueDesc('StA_title_realm_authority_capacity')]"
			# 	text = "STA_AUTHORITY_CAPACITY"
			# }
			container = {
				widget = {
					size = { 240 30 }
					
					progressbar_red = {
						visible = "[GreaterThanOrEqualTo_CFixedPoint(Title.MakeScope.ScriptValue('StA_title_realm_authority'),Title.MakeScope.ScriptValue('StA_title_realm_authority_capacity'))]"
						# name = "authority"
						size = { 240 30 }

						min = 0
						max = "[FixedPointToProgressbarValue(Title.MakeScope.ScriptValue('StA_title_realm_authority_capacity'))]"
						value = "[FixedPointToProgressbarValue(Title.MakeScope.ScriptValue('StA_title_realm_authority'))]"
					}
					progressbar_green = {
						visible = "[LessThan_CFixedPoint(Title.MakeScope.ScriptValue('StA_title_realm_authority'),Title.MakeScope.ScriptValue('StA_title_realm_authority_capacity'))]"
						# name = "authority"
						size = { 240 30 }

						min = 0
						max = "[FixedPointToProgressbarValue(Title.MakeScope.ScriptValue('StA_title_realm_authority_capacity'))]"
						value = "[FixedPointToProgressbarValue(Title.MakeScope.ScriptValue('StA_title_realm_authority'))]"
					}

					hbox = {
						position = { 0 -2 }
						layoutpolicy_horizontal = expanding
						expand = {}
						text_single = {
							raw_text = "@authority_icon! [authority|E]:"
						}
						spacer = { size = { 10 0 }}
						text_single = {
							tooltipwidget = {
								StA_widget_authority_breakdown_tooltip = {}
							}
							text = "STA_TITLE_AUTHORITY"
						}
						expand = {}
					}
					
					text_single = {
						# tooltip = "[Title.MakeScope.GetScriptValueDesc('StA_title_realm_authority')]"
						# texture = "gfx/interface/icons/icon_time.dds"
						# text = "TEST"
						text = "StA_title_law_cooldown"
						position = { 240 0 }
						# default_format = "#low"
					}
				}
			}
			
			# text_label_center = {
			# 	tooltip = "[Title.MakeScope.GetScriptValueDesc('StA_title_realm_authority')]"
			# 	text = "STA_AUTHORITY_SPENT"
			# }
		}

		# spacer = { size = { 0 5 }}

		hbox = {
			margin = { 0 10 }
			using = Background_Letter
			name = "StA_realm_law_tab_contents"
			layoutpolicy_horizontal = expanding
			vbox = {
				spacing = 5
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				datamodel = "[GetGlobalList('StA_title_laws')]"
				item = {
					hbox = {
						layoutpolicy_horizontal = expanding
						datacontext = "[Scope.Story]"
						datamodel = "[GetGlobalList(Concatenate('StA_levels_',Story.MakeScope.Var('levels').GetFlagName))]"
						text_single = {
							align = right
							max_width = 120
							min_width = 120
							text = "[Localize(Concatenate(Story.MakeScope.Var('law_').GetFlagName,'icon'))]"
							using = Font_Size_Small
							default_format = "#light_background"
						}
						button_group = {
							visible = "[Title.MakeScope.Var(Concatenate(Story.MakeScope.Var('law_').GetFlagName,'faction_check')).IsSet]"
							icon_flat_standard = {
								size = { 25 25 }
								texture = "gfx/interface/icons/faction_type/independence_faction.dds"
								using = tooltip_ne
							}
							icon = {
								visible = "[GreaterThan_CFixedPoint(Title.MakeScope.ScriptValue('StA_title_faction_discontent_progress'),'(CFixedPoint)0')]"
								position = { 10 10 }
								size = { 15 15 }
								texture = "gfx/interface/icons/symbols/icon_arrow_red_up.dds"
							}
							icon = {
								visible = "[LessThan_CFixedPoint(Title.MakeScope.ScriptValue('StA_title_faction_discontent_progress'),'(CFixedPoint)0')]"
								position = { 10 10 }
								size = { 15 15 }
								texture = "gfx/interface/icons/symbols/icon_arrow_green_down.dds"
							}
							onclick = "[ToggleGameView('factions_window')]"
							onclick = "[GetVariableSystem.Clear(Concatenate('factions_',Title.GetKey))]"
							onclick = "[GetVariableSystem.Toggle(Concatenate('factions_',Title.GetKey))]"
							onclick = "[GetVariableSystem.Clear(Concatenate(Concatenate('factions_',Title.GetKey),Story.MakeScope.Var('law_').GetFlagName))]"
							onclick = "[GetVariableSystem.Toggle(Concatenate(Concatenate('factions_',Title.GetKey),Story.MakeScope.Var('law_').GetFlagName))]"
						}
						container = {
							visible = "[Not(Title.MakeScope.Var(Concatenate(Story.MakeScope.Var('law_').GetFlagName,'faction_check')).IsSet)]"
							icon_flat_standard = {
								size = { 25 25 }
							}
						}
						item = {
							hbox = {
								UniUI_StA_title_realm_law_button_5 = {
									visible = "[EqualTo_int32(GetDataModelSize(GetGlobalList(Concatenate('StA_levels_',Story.MakeScope.Var('levels').GetFlagName))),'(int32)5')]"
									enabled = "[And(ObjectsEqual(Title.GetHolder,GetPlayer.Self),Or(EqualTo_CFixedPoint(Title.MakeScope.Var('StA_title_realm_law').Var(Story.MakeScope.Var('law_').GetFlagName).GetValue,Add_CFixedPoint(Scope.Var('value').GetValue,'(CFixedPoint)1')),EqualTo_CFixedPoint(Title.MakeScope.Var('StA_title_realm_law').Var(Story.MakeScope.Var('law_').GetFlagName).GetValue,Subtract_CFixedPoint(Scope.Var('value').GetValue,'(CFixedPoint)1'))))]"
									down = "[EqualTo_CFixedPoint(Title.MakeScope.Var('StA_title_realm_law').Var(Story.MakeScope.Var('law_').GetFlagName).GetValue,Scope.Var('value').GetValue)]"
									onclick = "[GetScriptedGui( 'StA_change_title_law' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('title',Title.MakeScope).AddScope( 'obligation', MakeScopeFlag( Story.MakeScope.Var('law_').GetFlagName )).AddScope( 'level',MakeScopeValue(Scope.Var('value').GetValue )).End)]"
									onclick = "[GetVariableSystem.Set('StA_confirm_title_law',Story.MakeScope.Var('law_').GetFlagName)]"
									onclick = "[GetVariableSystem.Set('StA_confirm_title_law_level',Scope.Var('flag').GetFlagName)]"
									text_single = {
										visible = "[EqualTo_CFixedPoint(Title.MakeScope.Var('StA_title_realm_law').Var(Story.MakeScope.Var('law_').GetFlagName).GetValue,Scope.Var('value').GetValue)]"
										text = "[Localize(Concatenate(Concatenate(Story.MakeScope.Var('law_').GetFlagName,Scope.Var('flag').GetFlagName),'_short'))]"
										using = Font_Size_Small
										default_format = "#high"
										parentanchor = center
										position = {0 -3 }
									}
									text_single = {
										visible = "[Not(EqualTo_CFixedPoint(Title.MakeScope.Var('StA_title_realm_law').Var(Story.MakeScope.Var('law_').GetFlagName).GetValue,Scope.Var('value').GetValue))]"
										text = "[Localize(Concatenate(Concatenate(Story.MakeScope.Var('law_').GetFlagName,Scope.Var('flag').GetFlagName),'_short'))]"
										using = Font_Size_Small
										default_format = "#light_background"
										parentanchor = center
										position = {0 -3 }
									}
								}
								UniUI_StA_title_realm_law_button_2 = {
									visible = "[EqualTo_int32(GetDataModelSize(GetGlobalList(Concatenate('StA_levels_',Story.MakeScope.Var('levels').GetFlagName))),'(int32)2')]"
									enabled = "[And(ObjectsEqual(Title.GetHolder,GetPlayer.Self),Or(EqualTo_CFixedPoint(Title.MakeScope.Var('StA_title_realm_law').Var(Story.MakeScope.Var('law_').GetFlagName).GetValue,Add_CFixedPoint(Scope.Var('value').GetValue,'(CFixedPoint)1')),EqualTo_CFixedPoint(Title.MakeScope.Var('StA_title_realm_law').Var(Story.MakeScope.Var('law_').GetFlagName).GetValue,Subtract_CFixedPoint(Scope.Var('value').GetValue,'(CFixedPoint)1'))))]"
									down = "[EqualTo_CFixedPoint(Title.MakeScope.Var('StA_title_realm_law').Var(Story.MakeScope.Var('law_').GetFlagName).GetValue,Scope.Var('value').GetValue)]"
									onclick = "[GetScriptedGui( 'StA_change_title_law' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('title',Title.MakeScope).AddScope( 'obligation', MakeScopeFlag( Story.MakeScope.Var('law_').GetFlagName )).AddScope( 'level',MakeScopeValue(Scope.Var('value').GetValue )).End)]"
									onclick = "[GetVariableSystem.Set('StA_confirm_title_law',Story.MakeScope.Var('law_').GetFlagName)]"
									onclick = "[GetVariableSystem.Set('StA_confirm_title_law_level',Scope.Var('flag').GetFlagName)]"
									text_single = {
										visible = "[EqualTo_CFixedPoint(Title.MakeScope.Var('StA_title_realm_law').Var(Story.MakeScope.Var('law_').GetFlagName).GetValue,Scope.Var('value').GetValue)]"
										text = "[Localize(Concatenate(Concatenate(Story.MakeScope.Var('law_').GetFlagName,Scope.Var('flag').GetFlagName),'_short'))]"
										fontsize = 13
										default_format = "#high"
										parentanchor = center
										position = {0 -3 }
									}
									text_single = {
										visible = "[Not(EqualTo_CFixedPoint(Title.MakeScope.Var('StA_title_realm_law').Var(Story.MakeScope.Var('law_').GetFlagName).GetValue,Scope.Var('value').GetValue))]"
										text = "[Localize(Concatenate(Concatenate(Story.MakeScope.Var('law_').GetFlagName,Scope.Var('flag').GetFlagName),'_short'))]"
										fontsize = 13
										default_format = "#light_background"
										parentanchor = center
										position = {0 -3 }
									}
								}
							}
						}
					}
				}
				expand = {}
			}

			# hbox = {
			# 	spacing = 10
			# 	layoutpolicy_horizontal = expanding
			# 	text_single = {
			# 		text = "StA_realm_tax"
			# 		using = Font_Size_Small
			# 		default_format = "#light_background"
			# 	}
			# 	expand = {}
			# 	hbox = {
			# 		datamodel = "[GetGlobalList('StA_obligation_levels')]"
			# 		item = {
			# 			flowcontainer = {
			# 				UniUI_StA_title_realm_law_button = {
			# 					text_single = {
			# 						visible = "[Not(EqualTo_CFixedPoint(Title.MakeScope.Var('StA_title_realm_law').Var('StA_realm_tax').GetValue,Scope.Var('value').GetValue))]"
			# 						text = "[Localize(Concatenate('StA_realm_tax_',Scope.Var('flag').GetFlagName))]"
			# 						default_format = "#light_background"
			# 						parentanchor = center
			# 						position = {0 -3 }
			# 					}
			# 					text_single = {
			# 						visible = "[EqualTo_CFixedPoint(Title.MakeScope.Var('StA_title_realm_law').Var('StA_realm_tax').GetValue,Scope.Var('value').GetValue)]"
			# 						text = "[Localize(Concatenate('StA_realm_tax_',Scope.Var('flag').GetFlagName))]"
			# 						default_format = "#high"
			# 						parentanchor = center
			# 						position = {0 -3 }
			# 					}
			# 					enabled = "[And(ObjectsEqual(Title.GetHolder,GetPlayer.Self),Or(EqualTo_CFixedPoint(Title.MakeScope.Var('StA_title_realm_law').Var('StA_realm_tax').GetValue,Add_CFixedPoint(Scope.Var('value').GetValue,'(CFixedPoint)1')),EqualTo_CFixedPoint(Title.MakeScope.Var('StA_title_realm_law').Var('StA_realm_tax').GetValue,Subtract_CFixedPoint(Scope.Var('value').GetValue,'(CFixedPoint)1'))))]"
			# 					down = "[EqualTo_CFixedPoint(Title.MakeScope.Var('StA_title_realm_law').Var('StA_realm_tax').GetValue,Scope.Var('value').GetValue)]"
			# 					onclick = "[GetScriptedGui( 'StA_change_title_law' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('title',Title.MakeScope).AddScope( 'obligation', MakeScopeFlag( 'StA_realm_tax' )).AddScope( 'level',MakeScopeValue(Scope.Var('value').GetValue )).End)]"
			# 					onclick = "[GetVariableSystem.Set('StA_confirm_title_law','StA_realm_tax')]"
			# 					onclick = "[GetVariableSystem.Set('StA_confirm_title_law_level',Scope.Var('flag').GetFlagName)]"
			# 				}
			# 			}
			# 		}
			# 	}
			# }
			# hbox = {
			# 	spacing = 10
			# 	layoutpolicy_horizontal = expanding
			# 	text_single = {
			# 		text = "StA_realm_levies"
			# 		using = Font_Size_Small
			# 		default_format = "#light_background"
			# 	}
			# 	expand = {}
			# 	hbox = {
			# 		datamodel = "[GetGlobalList('StA_obligation_levels')]"
			# 		item = {
			# 			flowcontainer = {
			# 				UniUI_StA_title_realm_law_button = {
			# 					text_single = {
			# 						visible = "[Not(EqualTo_CFixedPoint(Title.MakeScope.Var('StA_title_realm_law').Var('StA_realm_levies').GetValue,Scope.Var('value').GetValue))]"
			# 						text = "[Localize(Concatenate('StA_realm_levies_',Scope.Var('flag').GetFlagName))]"
			# 						default_format = "#light_background"
			# 						parentanchor = center
			# 						position = {0 -3 }
			# 					}
			# 					text_single = {
			# 						visible = "[EqualTo_CFixedPoint(Title.MakeScope.Var('StA_title_realm_law').Var('StA_realm_levies').GetValue,Scope.Var('value').GetValue)]"
			# 						text = "[Localize(Concatenate('StA_realm_levies_',Scope.Var('flag').GetFlagName))]"
			# 						default_format = "#high"
			# 						parentanchor = center
			# 						position = {0 -3 }
			# 					}
			# 					enabled = "[And(ObjectsEqual(Title.GetHolder,GetPlayer.Self),Or(EqualTo_CFixedPoint(Title.MakeScope.Var('StA_title_realm_law').Var('StA_realm_levies').GetValue,Add_CFixedPoint(Scope.Var('value').GetValue,'(CFixedPoint)1')),EqualTo_CFixedPoint(Title.MakeScope.Var('StA_title_realm_law').Var('StA_realm_levies').GetValue,Subtract_CFixedPoint(Scope.Var('value').GetValue,'(CFixedPoint)1'))))]"
			# 					down = "[EqualTo_CFixedPoint(Title.MakeScope.Var('StA_title_realm_law').Var('StA_realm_levies').GetValue,Scope.Var('value').GetValue)]"
			# 					onclick = "[GetScriptedGui( 'StA_change_title_law' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('title',Title.MakeScope).AddScope( 'obligation', MakeScopeFlag( 'StA_realm_levies' )).AddScope( 'level',MakeScopeValue(Scope.Var('value').GetValue )).End)]"
			# 					onclick = "[GetVariableSystem.Set('StA_confirm_title_law','StA_realm_levies')]"
			# 					onclick = "[GetVariableSystem.Set('StA_confirm_title_law_level',Scope.Var('flag').GetFlagName)]"
			# 				}
			# 			}
			# 		}
			# 	}
			# }
			# hbox = {
			# 	margin = { 10 10 }
			# 	layoutpolicy_horizontal = expanding
			# 	vbox = {
			# 		margin = { 10 10 }
			# 		background = {
			# 			using = Background_Area
			# 			alpha = 0.75
			# 		}
			# 		layoutpolicy_vertical = expanding
			# 		layoutpolicy_horizontal = expanding
			# 		hbox = {
			# 			layoutpolicy_horizontal = expanding
			# 			text_single = {
			# 				text = "StA_succession_rights"
			# 				using = Font_Size_Medium
			# 				default_format = "#light_background"
			# 			}
			# 			expand = {}
			# 		}
			# 		hbox = {
			# 			using = Background_Letter
			# 			layoutpolicy_horizontal = expanding
			# 			button_checkbox_label = {
			# 				enabled = "[ObjectsEqual(Title.GetHolder,GetPlayer.Self)]"
			# 				visible = "[EqualTo_CFixedPoint(Title.MakeScope.Var('StA_title_realm_law').Var('succession_rights').GetValue,'(CFixedPoint)0')]"
			# 				onclick = "[GetScriptedGui( 'StA_change_title_law' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('title',Title.MakeScope).AddScope( 'obligation', MakeScopeFlag( 'succession_rights' )).AddScope( 'level',MakeScopeValue(Abs_CFixedPoint(Subtract_CFixedPoint(Title.MakeScope.Var('StA_title_realm_law').Var('succession_rights').GetValue,'(CFixedPoint)1' )))).End)]"
			# 				onclick = "[GetVariableSystem.Set('StA_confirm_title_law','succession_rights')]"
			# 				onclick = "[GetVariableSystem.Set('StA_confirm_title_law_level','1')]"

			# 				blockoverride "checkbox"
			# 				{
			# 					checked = no
			# 				}

			# 				blockoverride "text"
			# 				{
			# 					text = "succession_rights_forced_partition_short"
			# 					default_format = "#light_background"
			# 				}
			# 			}
			# 			button_checkbox_label = {
			# 				enabled = "[ObjectsEqual(Title.GetHolder,GetPlayer.Self)]"
			# 				visible = "[EqualTo_CFixedPoint(Title.MakeScope.Var('StA_title_realm_law').Var('succession_rights').GetValue,'(CFixedPoint)1')]"
			# 				onclick = "[GetScriptedGui( 'StA_change_title_law' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('title',Title.MakeScope).AddScope( 'obligation', MakeScopeFlag( 'succession_rights' )).AddScope( 'level',MakeScopeValue(Abs_CFixedPoint(Subtract_CFixedPoint(Title.MakeScope.Var('StA_title_realm_law').Var('succession_rights').GetValue,'(CFixedPoint)1' )))).End)]"
			# 				onclick = "[GetVariableSystem.Set('StA_confirm_title_law','succession_rights')]"
			# 				onclick = "[GetVariableSystem.Set('StA_confirm_title_law_level','0')]"

			# 				blockoverride "checkbox"
			# 				{
			# 					checked = yes
			# 				}

			# 				blockoverride "text"
			# 				{
			# 					text = "succession_rights_forced_partition_short"
			# 					default_format = "#light_background"
			# 				}
			# 			}
			# 			expand = {}
			# 		}
			# 		spacer = {
			# 			size = { 0 10 }
			# 		}
			# 		hbox = {
			# 			layoutpolicy_horizontal = expanding
			# 			text_single = {
			# 				text = "StA_title_revocation_rights"
			# 				using = Font_Size_Medium
			# 				default_format = "#light_background"
			# 			}
			# 			expand = {}
			# 		}
			# 		hbox = {
			# 			using = Background_Letter
			# 			layoutpolicy_horizontal = expanding
			# 			button_checkbox_label = {
			# 				# Order dependent, first select the unselected level then set it as the new selected one
			# 				enabled = "[ObjectsEqual(Title.GetHolder,GetPlayer.Self)]"
			# 				visible = "[EqualTo_CFixedPoint(Title.MakeScope.Var('StA_title_realm_law').Var('title_revocation_rights').GetValue,'(CFixedPoint)0')]"
			# 				onclick = "[GetScriptedGui( 'StA_change_title_law' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('title',Title.MakeScope).AddScope( 'obligation', MakeScopeFlag( 'title_revocation_rights' )).AddScope( 'level',MakeScopeValue(Abs_CFixedPoint(Subtract_CFixedPoint(Title.MakeScope.Var('StA_title_realm_law').Var('title_revocation_rights').GetValue,'(CFixedPoint)1' )))).End)]"
			# 				onclick = "[GetVariableSystem.Set('StA_confirm_title_law','title_revocation_rights')]"
			# 				onclick = "[GetVariableSystem.Set('StA_confirm_title_law_level','1')]"
			# 				blockoverride "checkbox"
			# 				{
			# 					checked = no
			# 				}

			# 				blockoverride "text"
			# 				{
			# 					text = "title_revocation_rights_protected_short"
			# 					default_format = "#light_background"
			# 				}
			# 			}
			# 			button_checkbox_label = {
			# 				# Order dependent, first select the unselected level then set it as the new selected one
			# 				enabled = "[ObjectsEqual(Title.GetHolder,GetPlayer.Self)]"
			# 				visible = "[EqualTo_CFixedPoint(Title.MakeScope.Var('StA_title_realm_law').Var('title_revocation_rights').GetValue,'(CFixedPoint)1')]"
			# 				onclick = "[GetScriptedGui( 'StA_change_title_law' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('title',Title.MakeScope).AddScope( 'obligation', MakeScopeFlag( 'title_revocation_rights' )).AddScope( 'level',MakeScopeValue(Abs_CFixedPoint(Subtract_CFixedPoint(Title.MakeScope.Var('StA_title_realm_law').Var('title_revocation_rights').GetValue,'(CFixedPoint)1' )))).End)]"
			# 				onclick = "[GetVariableSystem.Set('StA_confirm_title_law','title_revocation_rights')]"
			# 				onclick = "[GetVariableSystem.Set('StA_confirm_title_law_level','0')]"
			# 				blockoverride "checkbox"
			# 				{
			# 					checked = yes
			# 				}

			# 				blockoverride "text"
			# 				{
			# 					text = "title_revocation_rights_protected_short"
			# 					default_format = "#light_background"
			# 				}
			# 			}
			# 			expand = {}
			# 		}
			# 		expand = {}
			# 	}
			# 	vbox = {
			# 		margin = { 10 10 }
			# 		background = {
			# 			using = Background_Area
			# 			alpha = 0.75
			# 		}
			# 		layoutpolicy_vertical = expanding
			# 		layoutpolicy_horizontal = expanding
			# 		hbox = {
			# 			layoutpolicy_horizontal = expanding
			# 			text_single = {
			# 				text = "StA_war_declaration_rights"
			# 				using = Font_Size_Medium
			# 				default_format = "#light_background"
			# 			}
			# 			expand = {}
			# 		}
			# 		hbox = {
			# 			using = Background_Letter
			# 			layoutpolicy_horizontal = expanding
			# 			button_checkbox_label = {
			# 				enabled = "[ObjectsEqual(Title.GetHolder,GetPlayer.Self)]"
			# 				# Order dependent, first select the unselected level then set it as the new selected one
			# 				visible = "[EqualTo_CFixedPoint(Title.MakeScope.Var('StA_title_realm_law').Var('war_declaration_rights').GetValue,'(CFixedPoint)0')]"
			# 				onclick = "[GetScriptedGui( 'StA_change_title_law' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('title',Title.MakeScope).AddScope( 'obligation', MakeScopeFlag( 'war_declaration_rights' )).AddScope( 'level',MakeScopeValue(Abs_CFixedPoint(Subtract_CFixedPoint(Title.MakeScope.Var('StA_title_realm_law').Var('war_declaration_rights').GetValue,'(CFixedPoint)1' )))).End)]"
			# 				onclick = "[GetVariableSystem.Set('StA_confirm_title_law','war_declaration_rights')]"
			# 				onclick = "[GetVariableSystem.Set('StA_confirm_title_law_level','1')]"

			# 				blockoverride "checkbox"
			# 				{
			# 					checked = no
			# 					enabled = "[ModifyVassalContractInteractionWindowObligationLevelOption.IsEnabled]" 
			# 				}

			# 				blockoverride "text"
			# 				{
			# 					text = "war_declaration_rights_allowed_short"
			# 					default_format = "#light_background"
			# 				}
			# 			}
			# 			button_checkbox_label = {
			# 				enabled = "[ObjectsEqual(Title.GetHolder,GetPlayer.Self)]"
			# 				# Order dependent, first select the unselected level then set it as the new selected one
			# 				visible = "[EqualTo_CFixedPoint(Title.MakeScope.Var('StA_title_realm_law').Var('war_declaration_rights').GetValue,'(CFixedPoint)1')]"
			# 				onclick = "[GetScriptedGui( 'StA_change_title_law' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('title',Title.MakeScope).AddScope( 'obligation', MakeScopeFlag( 'war_declaration_rights' )).AddScope( 'level',MakeScopeValue(Abs_CFixedPoint(Subtract_CFixedPoint(Title.MakeScope.Var('StA_title_realm_law').Var('war_declaration_rights').GetValue,'(CFixedPoint)1' )))).End)]"
			# 				onclick = "[GetVariableSystem.Set('StA_confirm_title_law','war_declaration_rights')]"
			# 				onclick = "[GetVariableSystem.Set('StA_confirm_title_law_level','0')]"

			# 				blockoverride "checkbox"
			# 				{
			# 					checked = yes
			# 					enabled = "[ModifyVassalContractInteractionWindowObligationLevelOption.IsEnabled]" 
			# 				}

			# 				blockoverride "text"
			# 				{
			# 					text = "war_declaration_rights_allowed_short"
			# 					default_format = "#light_background"
			# 				}
			# 			}
			# 			expand = {}
			# 		}
			# 		expand = {}
			# 	}
			# }
		}
		expand = {}
	}

	type UniUI_StA_title_realm_law_button_5 = button_letter {
		size = { 90 30 }
		background = {
			using = Background_Area_Dark
		}
	}
	type UniUI_StA_title_realm_law_button_3 = button_letter {
		size = { 155 40 }
		background = {
			using = Background_Area_Dark
		}
	}
	type UniUI_StA_title_realm_law_button_2 = button_letter {
		size = { 180 40 }
		background = {
			using = Background_Area_Dark
		}
	}
}

types StA_tooltips {
	type StA_widget_authority_breakdown_tooltip = widget {
		alwaystransparent = no

		block "background" { #### needed to solve the hack for tooltip in Realm View
			using = DefaultTooltipBackground
		}

		vbox = {
			layoutpolicy_horizontal = expanding
			set_parent_size_to_minimum = yes
			margin = { 14 8 }
			margin_bottom = 18
			spacing = 14

			# block "my_gold" {}

			text_single = {
				layoutpolicy_horizontal = expanding
				text = "STA_AUTHORITY_BALANCE"
			}

			divider_light = {
				layoutpolicy_horizontal = expanding
			}

			text_single = {
				# name = "name"
				layoutpolicy_horizontal = expanding
				text = "STA_AUTHORITY_GENERATION"
			}

			# vbox = {
			# 	layoutpolicy_horizontal = expanding
			# 	datacontext = "[GuiScope.SetRoot(Title.MakeScope).GetScriptValueBreakdown('StA_title_realm_authority_capacity')]"
			# 	datamodel = "[ValueBreakdown.GetSubValues]"
			# 	item = {
			# 		text_single = {
			# 			name = "name"
			# 			layoutpolicy_horizontal = expanding
			# 			text = "STA_AUTHORITY_GENERATION_DETAIL"
			# 		}
			# 	}
			# 	expand = {}
			# }

			text_single = {
				layoutpolicy_horizontal = expanding
				text = "[Title.MakeScope.GetScriptValueDesc('StA_title_realm_authority_capacity')]"
			}

			divider_light = {
				layoutpolicy_horizontal = expanding
			}

			text_single = {
				# name = "name"
				layoutpolicy_horizontal = expanding
				text = "STA_AUTHORITY_USAGE"
			}

			vbox = {
				layoutpolicy_horizontal = expanding
				datacontext = "[GuiScope.SetRoot(Title.MakeScope).GetScriptValueBreakdown('StA_title_realm_authority')]"
				datamodel = "[ValueBreakdown.GetSubValues]"
				item = {
					text_single = {
						name = "name"
						layoutpolicy_horizontal = expanding
						raw_text = "[ValueBreakdown.GetName]: [Subtract_CFixedPoint('(CFixedPoint)0',ValueBreakdown.GetFixedPointValue)|+=0]"
					}
				}
				expand = {}
			}

			expand = {}

			# vbox = {
			# 	spacing = 6
			# 	alwaystransparent = no

			# 	vbox = {
			# 		layoutpolicy_horizontal = expanding

			# 		text_single = {
			# 			layoutpolicy_horizontal = expanding
			# 			text = "[ValueBreakdown.GetName]"
			# 			default_format = "#T"

			# 			background = {
			# 				using = Background_Area
			# 				margin = { 10 0 }
			# 				margin_bottom = 8
			# 			}
			# 		}

			# 		vbox = {
			# 			name = "values_grid"
			# 			datamodel = "[ValueBreakdown.GetSubValues]"
			# 			layoutpolicy_horizontal = expanding
			# 			margin_top = 2

			# 			item = {
			# 				hbox = {
			# 					name = "value_breakdown"
			# 					layoutpolicy_horizontal = expanding
			# 					spacing = 10

			# 					text_single = {
			# 						name = "name"
			# 						layoutpolicy_horizontal = expanding
			# 						text = "[ValueBreakdown.GetName]"
			# 					}

			# 					text_single = {
			# 						name = "value_with_tooltip"
			# 						visible = "[And(ValueBreakdown.HasTooltip, ValueBreakdown.ShouldShowValue)]"
			# 						text = "[ValueBreakdown.GetValue|L]"
			# 						align = right
			# 						default_format = "#high"

			# 						using = tooltip_se

			# 						tooltipwidget = {
			# 							widget_value_breakdown_tooltip = {}
			# 						}
			# 					}

			# 					text_single = {
			# 						name = "value_with_no_tooltip"
			# 						visible = "[And( Not(ValueBreakdown.HasTooltip), ValueBreakdown.ShouldShowValue )]"
			# 						text = "[ValueBreakdown.GetValue]"
			# 						align = right
			# 					}
			# 				}
			# 			}
			# 		}

			# 		text_single = {
			# 			visible = "[Not(DataModelHasItems( ValueBreakdown.GetSubValues ))]"
			# 			layoutpolicy_horizontal = expanding
			# 			block "no_values" {
			# 				text = "VALUE_BREAKDOWN_NO_VALUES"
			# 			}
			# 			default_format = "#weak"
			# 		}

			# 		vbox = {
			# 			layoutpolicy_horizontal = expanding
			# 			margin_top = 10

			# 			divider_light = {
			# 				layoutpolicy_horizontal = expanding
			# 			}

			# 			hbox = {
			# 				visible = "[DataModelHasItems( ValueBreakdown.GetSubValues )]"
			# 				layoutpolicy_horizontal = expanding

			# 				text_single = {
			# 					visible = "[ValueBreakdown.ShouldShowValue]"
			# 					layoutpolicy_horizontal = expanding
			# 					text = "VALUE_BREAKDOWN_TOTAL"
			# 				}

			# 				text_single = {
			# 					text = "[ValueBreakdown.GetValue|+]"
			# 					default_format = "#high"
			# 				}
			# 			}
			# 		}
			# 	}
			# }

			# vbox_gold_breakdown = {
			# 	name = "expenses"
			# 	layoutpolicy_horizontal = expanding
			# 	block "expenses" {}
			# }

			block "gold_income" {}
		}
	}
}